{"_id":"DOCWfkw74ItmXZtC","name":"#[CF_tempEntity]","type":"chat","author":"DX8acFfCTTwwzgWq","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"DX8acFfCTTwwzgWq":3},"flags":{"cf":{"id":"temp_5cp93oaz7tr","path":"Savage Eberron Macros","color":"#008000","name":"Savage Eberron Macros","children":[],"folderPath":[],"fontColor":"#FFFFFF","icon":"https://assets.forge-vtt.com/5f43f8ea1a91d63438d13159/artwork/icons/logo-eberron-circle-white.webp","sorting":"a","contents":["dxgjZAU55L8vBlZi"],"version":"2.4.6"}}}
{"_id":"dxgjZAU55L8vBlZi","name":"Coin Manager","type":"script","author":"DX8acFfCTTwwzgWq","img":"icons/commodities/currency/coins-plain-stack-gold-yellow.webp","scope":"global","command":"/* Coin Manager for Savage Eberron\nsource: \nicon: icons/commodities/currency/coins-plain-gold.webp\n\nTODO\n*/\n\nconst version = 'v1.3';\nconst sm = game.modules.get('swademacros')?.api.sm;\nconst icon = \"icons/commodities/currency/coins-plain-gold.webp\";\n\nconst iconCrowns = \"icons/commodities/currency/coin-inset-crown-gold.webp\";\nconst iconSovereigns = \"icons/commodities/currency/coin-inset-compass-silver.webp\";\nconst iconGalifars = \"icons/commodities/currency/coins-plain-gold.webp\";\nconst iconDragons = \"icons/commodities/currency/coin-embossed-unicorn-silver.webp\";\n\nlet coreRules = false;\nif (game.modules.get(\"swpf-core-rules\")?.active) { coreRules = true; }\n\nif ( canvas.tokens.controlled[0]===undefined && Array.from(game.user.targets)[0]===undefined ) {\n  ui.notifications.error(\"Please, select or target a token.\"); // No Token is Selected\n} else {\n  main();\n}\n\nfunction main() {\n  let tokens = canvas.tokens.controlled;\n  let playersNames = tokens.map((p=> p.data.name)); \n\n\n  let playerNameList = `<option value=\"everyone\" selected>Everyone</option>`;\n  //let playerNameList=``;\n  for (var tokenD of tokens) {\n    playerNameList += `<option value=\"${tokenD.actor.id}\">${tokenD.name}</option>`;\n  }  \n\n  /* Show actual xp points*/\n  let currentHeroPointsList = '';\n  for (var tokenD of tokens) {\n    var copper = getCoinsTotal(getCoins(tokenD.actor.id, 'Crowns') );\n    var silver = getCoinsTotal(getCoins(tokenD.actor.id, 'Sovereigns') );\n    var gold = getCoinsTotal(getCoins(tokenD.actor.id, 'Galifars') );\n    var platinum = getCoinsTotal(getCoins(tokenD.actor.id, 'Dragons') );\n    currentHeroPointsList += `<p><b>${tokenD.name}</b></p>`;\n    currentHeroPointsList += `<ul><li>Crowns: <b>${copper}</b> • Sovereigns: <b>${silver}</b> • Galifars: <b>${gold}</b> • Dragons: <b>${platinum}</b></li></ul>`;\n  }    \n\n  let template = `\n    <style type=\"text/css\">\n      .tg  {border-collapse:collapse;border-spacing:0;margin:0px auto;}\n      .tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;\n        overflow:hidden;padding:10px 5px;word-break:normal;}\n      .tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;\n        font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}\n      .tg .tg-baqh{text-align:center;vertical-align:top}\n      .tg .tg-xwyw{border-color:#000000;text-align:center;vertical-align:middle}\n    </style>\n    \n    <table class=\"tg\">\n    <tbody>\n      <tr>\n        <td class=\"tg-xwyw\" colspan=\"4\"><b>Choose: </b><select id=\"playerName\" style=\"width: 200px\">${playerNameList}</select></td>\n      </tr>\n      <tr>      \n        <td class=\"tg-baqh\">\n          <div>\n            <img src=\"${iconCrowns}\" style=\"vertical-align:middle\" width=\"24\" height=\"24\">\n            <span style=\"\">Crowns</span>\n          </div>        \n        </td>\n        <td class=\"tg-baqh\">\n          <div>\n            <img src=\"${iconSovereigns}\" style=\"vertical-align:middle\" width=\"24\" height=\"24\">\n            <span style=\"\">Sovereigns</span>\n          </div>          \n        </td>\n        <td class=\"tg-baqh\">\n          <div>\n            <img src=\"${iconGalifars}\" style=\"vertical-align:middle\" width=\"24\" height=\"24\">\n            <span style=\"\">Galifars</span>\n          </div>         \n        </td>\n        <td class=\"tg-baqh\">\n          <div>\n            <img src=\"${iconDragons}\" style=\"vertical-align:middle\" width=\"24\" height=\"24\">\n            <span style=\"\">Dragons</span>\n          </div>         \n        </td>\n      </tr>\n      <tr>\n        <td class=\"tg-baqh\">\n          <input id=\"copper\" type=\"number\" min=\"-1000\" max=\"1000\" style=\"width: 100%;\" value=0>\n        </td>\n        <td class=\"tg-baqh\">\n          <input id=\"silver\" type=\"number\" min=\"-1000\" max=\"1000\" style=\"width: 100%;\" value=0>\n        </td>\n        <td class=\"tg-baqh\">\n          <input id=\"gold\" type=\"number\" min=\"-1000\" max=\"1000\" style=\"width: 100%;\" value=0>\n        </td>\n        <td class=\"tg-baqh\">\n          <input id=\"platinum\" type=\"number\" min=\"-1000\" max=\"1000\" style=\"width: 100%;\" value=0>\n        </td>\n      </tr>\n    </tbody>\n    </table>\n \n  <h2>Current Coins</h2>\n  <ul>\n    ${currentHeroPointsList}\n  </ul>\n  `;\n  \n  new Dialog({\n    title: `Coin Manager for Savage Pathfinder - ${version}`,\n    content: template,\n    buttons: {\n      ok: {\n        label: \"Apply\",\n        callback: async (html) => {\n          coinManager(html);\n        },\n      },\n      cancel: {\n        label: \"Cancel\",\n      },\n    },\n  }).render(true);\n}\n\n\n// -------------------------------------------------------\n// Functions\nasync function coinManager(html) {\n  let actorID = html.find(\"#playerName\")[0].value;  \n  let copper = html.find(\"#copper\")[0].value;  \n  let silver = html.find(\"#silver\")[0].value; \n  let gold = html.find(\"#gold\")[0].value; \n  let platinum = html.find(\"#platinum\")[0].value; \n  \n  console.log('Actor ID: ' + actorID)\n  if (actorID=='everyone') {    \n    console.log('-------------------')\n    \n    \n    let tokens = canvas.tokens.controlled;\n    for (var tokenD of tokens) {\n      let actorid = tokenD.actor.id;\n      //console.log('Token ID: ' + actorid)\n      coinMessage(actorid, copper, silver, gold, platinum);\n      updateHeroCoins(actorid, copper, silver, gold, platinum);\n    }\n  } else { \n    coinMessage(actorID, copper, silver, gold, platinum);\n    updateHeroCoins(actorID, copper, silver, gold, platinum);\n  }  \n}\n\nasync function updateHeroCoins(actorID, copper, silver, gold, platinum) {\n  let character = game.actors.get(actorID);\n  let copperCurrent = getCoinsTotal(getCoins(actorID, 'Crowns', true) );\n  let silverCurrent = getCoinsTotal(getCoins(actorID, 'Sovereigns', true) );\n  let goldCurrent = getCoinsTotal(getCoins(actorID, 'Galifars', true) );\n  let platinumCurrent = getCoinsTotal(getCoins(actorID, 'Dragons', true) );  \n  \n  // create missing coins + Patch actor\n  await patchHeroCoins(actorID);\n  \n  // add/remove coins\n  updateCoins(actorID, copperCurrent, copper, 'Crowns');\n  updateCoins(actorID, silverCurrent, silver, 'Sovereigns');\n  updateCoins(actorID, goldCurrent, gold, 'Galifars');\n  updateCoins(actorID, platinumCurrent, platinum, 'Dragons');\n}\n\nasync function createCoin(actorID, coinName) { \n  let missingIcon;\n  let rules = '';\n  switch (coinName) {\n    case 'Crowns':\n      missingIcon = iconCrowns;\n      break;\n    case 'Sovereigns':\n      missingIcon = iconSovereigns;\n      break;\n    case 'Galifars':\n       missingIcon = iconGalifars;\n      break;\n    case 'Dragons':\n      missingIcon = iconDragons;\n      break;\n  }  \n  \n  rules += `<table><colgroup> <col/> <col/> <col/> <col/> <col/> </colgroup><tbody><tr><th class=\"main-heading\" colspan=\"5\">Coins &amp; exchange value</th></tr><tr><th class=\"sub-heading left\">Coin</th><th class=\"sub-heading\">CP</th><th class=\"sub-heading\">SP</th><th class=\"sub-heading\">GP</th><th class=\"sub-heading\">PP</th></tr><tr><td>Crowns (cp)</td><td class=\"centered\">1</td><td class=\"centered\">1/10</td><td class=\"centered\">1/100</td><td class=\"centered\">1/1,000</td></tr><tr><td>Sovereigns (sp)</td><td class=\"centered\">10</td><td class=\"centered\">1</td><td class=\"centered\">1/10</td><td class=\"centered\">1/100</td></tr><tr><td>Galifars (gp)</td><td class=\"centered\">100</td><td class=\"centered\">10</td><td class=\"centered\">1</td><td class=\"centered\">1/10</td></tr><tr><td>Dragons (pp)</td><td class=\"centered\">1,000</td><td class=\"centered\">100</td><td class=\"centered\">10</td><td class=\"centered\">1</td></tr></tbody></table>`; \n  \n  if (coreRules) {\n    rules += '</br>@Compendium[swpf-core-rules.swpf-rules.7STCq0HPoAlaoOZ7]{1 Gear}';\n  }\n  \n  //let character = game.actors.contents.filter((t) => t.id === actorID)[0];  \n  let character = game.actors.get(actorID);\n  let data = [{\n    name: coinName,\n    type: 'gear',\n    img: missingIcon,    \n    data: {\n      \"description\": `<p>${rules}</p>`,\n      \"quantity\": 0\n    }\n  }];  \n  const createCoin = await character.createEmbeddedDocuments('Item', data);\n}\n\nasync function updateCoins(actorID, currentCoins, newCoins, coinType) {\n  if (newCoins!=0) {\n    //let character = game.actors.contents.filter((t) => t.id === actorID)[0];  \n    let character = game.actors.get(actorID);\n    let coinsTotal = parseInt(currentCoins)+parseInt(newCoins);\n    let coin = getCoins(actorID, coinType, true)[0];            \n    \n    // Check\n    if ( (coinsTotal)<=0 ) {\n      coinsTotal = 0;\n    }\n    \n    await coin.update({\n      [\"data.quantity\"]: coinsTotal\n    });    \n  }\n}\n\nasync function patchHeroCoins(actorID) {\n  let character = game.actors.get(actorID);  \n\n  // Add missing coins\n  if (getCoins(actorID, 'Crowns').length==0) await createCoin(actorID, 'Crowns');   \n  if (getCoins(actorID, 'Sovereigns').length==0) await createCoin(actorID, 'Sovereigns');\n  if (getCoins(actorID, 'Galifars').length==0) await createCoin(actorID, 'Galifars');   \n  if (getCoins(actorID, 'Dragons').length==0) await createCoin(actorID, 'Dragons');\n\n  let copperCurrent = await getCoins(actorID, 'Crowns');\n  let silverCurrent = await getCoins(actorID, 'Sovereigns');\n  let goldCurrent = await getCoins(actorID, 'Galifars');\n  let platinumCurrent = await getCoins(actorID, 'Dragons');  \n  \n  if (copperCurrent.length>1) { // join\n    await patchCoin(actorID, 'Crowns', getCoinsTotal(copperCurrent));\n  }\n  if (silverCurrent.length>1) {\n    await patchCoin(actorID, 'Sovereigns', getCoinsTotal(silverCurrent));\n  } \n  if (goldCurrent.length>1) {\n    await patchCoin(actorID, 'Galifars', getCoinsTotal(goldCurrent));\n  }\n  if (platinumCurrent.length>1) {\n    await patchCoin(actorID, 'Dragons', getCoinsTotal(platinumCurrent));\n  } \n  \n}\n\nasync function patchCoin(actorID, coinType, coinsTotal) {\n  let character = game.actors.get(actorID);\n  \n  let coins = getCoins(actorID, coinType, true);  \n  coins = coins.splice(1);\n  const ids = coins.map( coin => coin.id );\n  await character.deleteEmbeddedDocuments('Item', ids);        \n  // update\n  let coin = getCoins(actorID, coinType, true)[0];  \n  await coin.update({\n    [\"data.quantity\"]: coinsTotal\n  }); \n}\n\nfunction getCoins(actorID, coinType, isActor=false) {\n  let character = game.actors.get(actorID);\n  \n  let coins=0;\n  if (coinType=='Crowns') {\n    coins = character.items.filter(e => e.name==='Crowns');  \n  } else if (coinType=='Sovereigns') {\n    coins = character.items.filter(e => e.name==='Sovereigns');   \n  } else if (coinType=='Galifars') {\n    coins = character.items.filter(e => e.name==='Galifars');   \n  } else if (coinType=='Dragons') {\n    coins = character.items.filter(e => e.name==='Dragons');      \n  }  \n  return coins;\n}\n\nfunction getCoinsTotal(coins) {\n  if (coins.length>0) {\n    const sum = coins.reduce((total, item) => total += item.data.data.quantity, 0);\n    return sum;\n  } else {\n    return 0;\n  }  \n}\n\nfunction coinMessage(actorID, copper, silver, gold, platinum) {\n  let message = ``;\n  let copperCurrent = getCoinsTotal(getCoins(actorID, 'Crowns', true) );\n  let silverCurrent = getCoinsTotal(getCoins(actorID, 'Sovereigns', true) );\n  let goldCurrent = getCoinsTotal(getCoins(actorID, 'Galifars', true) );\n  let platinumCurrent = getCoinsTotal(getCoins(actorID, 'Dragons', true) );  \n  let character = game.actors.get(actorID);\n\n  message += `<h2>${character.name}</h2> \n  <h3>Current + <b style=\"color:red;\">Change</b></h3>\n  <ul><li>Crowns: <b>${copperCurrent}</b> + <b style=\"color:red;\">${copper}</b></li>\n  <li>Sovereigns: <b>${silverCurrent}</b> + <b style=\"color:red;\">${silver}</b></li> \n  <li>Galifars: <b>${goldCurrent}</b> + <b style=\"color:red;\">${gold}</b></li>\n  <li>Dragons: <b>${platinumCurrent}</b> + <b style=\"color:red;\">${platinum}</b></li></ul>\n  `;  \n\n  let chatData = {\n    user: game.user.id,\n    speaker: ChatMessage.getSpeaker(),\n    content: message\n  };  \n  ChatMessage.create(chatData, {});\n}\n\n// debug\n/*\nfunction debugme() {\n  let tokenD = canvas.tokens.controlled[0].actor.id  \n  console.log('Crowns: ' + getCoinsTotal(getCoins(tokenD, 'Crowns') ));\n  console.log( getCoins(tokenD, 'Crowns') );\n  console.log( getCoins(tokenD, 'Crowns').length );\n  console.log('Sovereigns: ' + getCoinsTotal(getCoins(tokenD, 'Sovereigns') ));\n  console.log( getCoins(tokenD, 'Sovereigns') );\n  console.log( getCoins(tokenD, 'Sovereigns').length );\n  console.log('Galifars: ' + getCoinsTotal(getCoins(tokenD, 'Galifars') ));\n  console.log( getCoins(tokenD, 'Galifars') );\n  console.log( getCoins(tokenD, 'Galifars').length );\n  console.log('Dragons: ' + getCoinsTotal(getCoins(tokenD, 'Dragons') ));  \n  console.log( getCoins(tokenD, 'Dragons') );\n  console.log( getCoins(tokenD, 'Galifars').length );\n  \n  \n  // dump\n  console.log('==============================');\n  tokenD = canvas.tokens.controlled[0];  \n  let coins = getCoins(tokenD, 'Crowns');  \n  coins = coins.splice(1);\n  let ids = coins.map( coin => coin.id );\n  console.log(ids);\n   tokenD.actor.deleteEmbeddedDocuments('Item', ids);\n  \n  tokenD = canvas.tokens.controlled[0];  \n  let coin = getCoins(tokenD, 'Crowns')[0];  \n   coin.update({\n    [\"data.quantity\"]: 666\n  });\n  \n  console.log('==============================');\n  \n  //let character = game.actors.contents.filter((t) => t.data.type === \"character\").filter((v) => v.data.name === playerName)[0];\n  //let character = game.actors.contents.filter((t) => t.id === tokenD.actor.id);\n}\n*/","folder":null,"sort":0,"permission":{"default":0,"DX8acFfCTTwwzgWq":3},"flags":{"cf":{"id":"temp_5cp93oaz7tr","path":"Savage Eberron Macros","color":"#008000"}}}
